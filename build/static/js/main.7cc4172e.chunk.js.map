{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["App","useState","pendingItem","setPendingItem","todoitem","setToDoItem","updatedItem","setUpdatedItem","isEdit","setIsEdit","idSelected","setIdSelected","fetchData","a","axios","get","result","data","useEffect","onDelete","id","post","toast","success","console","log","error","onAdd","itemObj","itemName","onUpdate","class","value","placeholder","onChange","e","target","onClick","map","item","Fragment","_id","xmlns","fill","viewBox","stroke","stroke-linecap","stroke-linejoin","stroke-width","d","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7cc4172e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\nimport './styles/output.css';\nimport axios from 'axios';\nimport toast, { Toaster } from 'react-hot-toast';\n\nfunction App() {\n\n  const [pendingItem, setPendingItem] = useState([]);\n  const [todoitem, setToDoItem] = useState();\n  const [updatedItem, setUpdatedItem] = useState();\n  const [isEdit, setIsEdit] = useState(false);\n  const [idSelected, setIdSelected] = useState();\n\n  const fetchData = async () => {\n    const result = await axios.get('https://educative-todolist.herokuapp.com/api/getAll');\n    setPendingItem(result.data);\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const onDelete = async (id) => {\n    try {\n      const result = await axios.post('https://educative-todolist.herokuapp.com/api/delete/' + id);\n      toast.success(\"Item is deleted\");\n      fetchData();\n    } catch (err) {\n      console.log(err);\n      toast.error(\"Item is not deleted\");\n    }\n  }\n\n  const onAdd = async (todoitem) => {\n    try {\n      const itemObj = {\n        itemName: todoitem.todoitem\n      }\n      const result = await axios.post('https://educative-todolist.herokuapp.com/api/add', itemObj);\n      toast.success(\"Item is added\");\n      setToDoItem(\"\");\n      fetchData();\n    } catch (err) {\n      toast.error(\"Item is not added\");\n    }\n  }\n\n  const onUpdate = async (id, todoitem) =>  {\n    console.log(id, todoitem);\n    try {\n      const itemObj = {\n        itemName: todoitem\n      }\n      const result = await axios.post('https://educative-todolist.herokuapp.com/api/update/' + id, itemObj);\n      toast.success(\"Item is updated\");\n      setUpdatedItem(\"\");\n      setIsEdit(false);\n      fetchData();\n    } catch (err) {\n      toast.error(\"Item is not updated\");\n    }\n  }\n\n  const setBoth = (id) => {\n    setIdSelected(id);\n    setIsEdit(true);\n  }\n\n  return (\n    <div class=\"h-100 w-full flex items-center justify-center bg-teal-lightest font-sans\">\n      <Toaster />\n      <div class=\"bg-white rounded shadow p-6 m-4 w-full lg:w-3/4 lg:max-w-lg\">\n        <div class=\"mb-4\">\n          <h1 class=\"text-grey-darkest\">Todo List</h1>\n          <div class=\"flex mt-4\">\n            <input class=\"shadow appearance-none border rounded w-full py-2 px-3 mr-4 text-grey-darker\" value={todoitem} placeholder=\"Add Todo\" onChange={(e) => setToDoItem(e.target.value)}></input>\n            <button class=\"flex-no-shrink p-2 border-2 rounded text-teal border-teal hover:bg-teal\" onClick={() => onAdd({ todoitem })}>Add</button>\n          </div>\n        </div>\n        <div>\n          {pendingItem.map(item => (\n            <React.Fragment>\n              <div class=\"flex mb-4 items-center\">\n                {isEdit == false ?\n                  <React.Fragment>\n                    <p class=\"w-full text-grey-darkest\">{item.itemName}</p>\n                    <button class=\"flex-no-shrink p-2 ml-2 border-2 rounded text-red border-red hover:text-white hover:bg-red\" onClick={() => setBoth(item._id)}><svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-6 w-6\" fill=\"white\" viewBox=\"0 0 24 24\" stroke=\"green\">\n                      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\" />\n                    </svg></button>\n                  </React.Fragment> :\n                  (idSelected == item._id ? \n                    <React.Fragment>\n                      <input class=\"shadow appearance-none border rounded w-full py-2 px-3 mr-4 text-grey-darker\" value={todoitem} placeholder=\"Update Todo\" onChange={(e) => setUpdatedItem(e.target.value)}></input>\n                      <button class=\"flex-no-shrink p-2 ml-2 border-2 rounded text-red border-red hover:text-white hover:bg-red\" id={item._id} onClick={() => onUpdate(item._id, updatedItem)}>\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-6 w-6\" fill=\"white\" viewBox=\"0 0 24 24\" stroke=\"green\">\n                          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M5 13l4 4L19 7\" />\n                        </svg>\n                      </button>\n                      <button class=\"flex-no-shrink p-2 ml-2 border-2 rounded text-red border-red hover:text-white hover:bg-red\" onClick={() => setIsEdit(false)}>\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-6 w-6\" fill=\"white\" viewBox=\"0 0 24 24\" stroke=\"red\">\n                          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\n                        </svg>\n                      </button>\n                    </React.Fragment> :\n                    <React.Fragment>\n                      <p class=\"w-full text-grey-darkest\">{item.itemName}</p>\n                      <button class=\"flex-no-shrink p-2 ml-2 border-2 rounded text-red border-red hover:text-white hover:bg-red\" onClick={() => setIsEdit(true) && setIdSelected(item._id)}><svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-6 w-6\" fill=\"white\" viewBox=\"0 0 24 24\" stroke=\"green\">\n                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\" />\n                      </svg></button>\n                      <button class=\"flex-no-shrink p-2 ml-2 border-2 rounded text-red border-red hover:text-white hover:bg-red\" onClick={() => onDelete(item._id)}><svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-6 w-6\" fill=\"white\" viewBox=\"0 0 24 24\" stroke=\"red\">\n                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" />\n                      </svg></button>\n                    </React.Fragment>\n                  )\n                }\n                {isEdit == false ?\n                  <button class=\"flex-no-shrink p-2 ml-2 border-2 rounded text-red border-red hover:text-white hover:bg-red\" onClick={() => onDelete(item._id)}><svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-6 w-6\" fill=\"white\" viewBox=\"0 0 24 24\" stroke=\"red\">\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" />\n                  </svg></button> : null\n                }\n\n\n              </div>\n            </React.Fragment>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}